// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  password   String
  email      String    @unique
  bio        String?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Tweet      Tweet[]
  Like       Like[]
  Comment    Comment[]
}

model Tweet {
  id         Int      @id @default(autoincrement())
  desc       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User      @relation(fields: [userId], references: [id])
  userId  Int
  Like    Like[]
  Comment Comment[]
}

model Like {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Tweet   Tweet @relation(fields: [tweetId], references: [id])
  user    User  @relation(fields: [userId], references: [id])
  tweetId Int
  userId  Int

  @@id(name: "id", [userId, tweetId])
}

model Comment {
  id      Int    @id @default(autoincrement())
  payload String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  tweet   Tweet @relation(fields: [tweetId], references: [id])
  userId  Int
  tweetId Int
}

// 명령어
// npx prisma migrate dev

//GUI 보는 명령어
// npx prisma studio
